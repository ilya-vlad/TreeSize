<RibbonWindow x:Class="WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:common="clr-namespace:WPF.Common"        
        xmlns:tree="clr-namespace:Aga.Controls.Tree;assembly=Aga.Controls"
        xmlns:converters="clr-namespace:WPF.Service.Converters"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="TreeSize Application" Height="600" Width="940">    
    <Window.Resources>
        <converters:ImageConverter x:Key="ImageConverter"/>
        <converters:SizeConverter x:Key="SizeConverter"/>
        <converters:ModeDisplayConverter x:Key="ModeDisplayConverter"/>
        <converters:PrefixOfNameConverter x:Key="PrefixOfNameConverter"/>
        <converters:SizeUnitConverter x:Key="SizeUnitConverter"/>
        <converters:VisibilityInitialTextConverter x:Key="VisibilityInitialTextConverter"/>
    </Window.Resources>     
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>            
        </Grid.RowDefinitions>
        <Ribbon Grid.Row="0">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>
                    <RibbonApplicationMenuItem Command="{Binding CloseApplicationCommand}">
                        <RibbonApplicationMenuItem.Header>
                            <StackPanel Orientation="Horizontal">                                
                                <Image Source="image/close.png"  Margin="0, 0, 5, 0" Width="20"/>
                                <TextBlock Text="Close"/>
                            </StackPanel>
                        </RibbonApplicationMenuItem.Header>
                        
                    </RibbonApplicationMenuItem>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Name="HomeTab" Header="Home">
                <RibbonGroup Header="ScanNode" MinWidth="10">
                    <RibbonSplitButton Label="Select Directory" 
                                       Command="{Binding SelectFolderCommand}"
                                       LargeImageSource="image/open.png"
                                       ItemsSource="{Binding Drives}">
                        <RibbonSplitButton.ItemContainerStyle>
                            <Style TargetType="MenuItem">                                
                                <Setter Property="Command" Value="{Binding DataContext.SelectDriveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                <Setter Property="CommandParameter" Value="{Binding Name}" />
                            </Style>
                        </RibbonSplitButton.ItemContainerStyle>                        
                        <RibbonSplitButton.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Run Text="{Binding VolumeLabel}"></Run>
                                    <Run Text="{Binding StringFormat= ({0}), Path=Name, Mode=OneWay}"></Run>
                                </TextBlock>
                            </DataTemplate>                            
                        </RibbonSplitButton.ItemTemplate>
                    </RibbonSplitButton> 
                    
                    <RibbonButton Label="Stop"
                                  LargeImageSource="image/stop.png" 
                                  IsEnabled="{Binding IsScanning}"
                                  Command="{Binding StopScanCommand}">
                    </RibbonButton>
                    <RibbonButton Label="Refresh"
                                  LargeImageSource="image/refresh.png"                                   
                                  Command="{Binding RefreshScanCommand}">
                    </RibbonButton>
                    
                </RibbonGroup>
                <RibbonGroup Header="Mode">
                    <RibbonRadioButton Label="Size" LargeImageSource="image/size.png"
                                       IsChecked="{Binding ModeDisplay, Converter={StaticResource ModeDisplayConverter},
                                        ConverterParameter={x:Static common:ModeDisplay.Size}}"
                                       Command="{Binding SetModeCommand}"
                                       CommandParameter="{x:Static common:ModeDisplay.Size}"/>
                    <RibbonRadioButton Label="Allocated Space" LargeImageSource="image/drive.png"
                                       IsChecked="{Binding ModeDisplay, Converter={StaticResource ModeDisplayConverter},
                                        ConverterParameter={x:Static common:ModeDisplay.Allocated}}"
                                       Command="{Binding SetModeCommand}"
                                       CommandParameter="{x:Static common:ModeDisplay.Allocated}"/>
                    <RibbonRadioButton Label="File Count" LargeImageSource="image/files.png"
                                       IsChecked="{Binding ModeDisplay, Converter={StaticResource ModeDisplayConverter},
                                        ConverterParameter={x:Static common:ModeDisplay.File_Count}}"
                                       Command="{Binding SetModeCommand}"
                                       CommandParameter="{x:Static common:ModeDisplay.File_Count}"/>
                    <RibbonRadioButton Label="Percent" LargeImageSource="image/percentage.png"
                                       IsChecked="{Binding ModeDisplay, Converter={StaticResource ModeDisplayConverter},
                                        ConverterParameter={x:Static common:ModeDisplay.Percent}}"
                                       Command="{Binding SetModeCommand}"
                                       CommandParameter="{x:Static common:ModeDisplay.Percent}"/>                    
                </RibbonGroup>
                <RibbonGroup Header="Unit">
                    <RibbonRadioButton Label="Automatic Units" LargeImageSource="image/auto.png"
                                       IsChecked="{Binding SizeUnit, Converter={StaticResource SizeUnitConverter},
                                        ConverterParameter={x:Static common:SizeUnit.Auto}}"
                                       Command="{Binding SetSizeUnitCommand}"
                                       CommandParameter="{x:Static common:SizeUnit.Auto}"/>
                    <RibbonRadioButton SmallImageSource="image/gb.png"
                                       IsChecked="{Binding SizeUnit, Converter={StaticResource SizeUnitConverter},
                                        ConverterParameter={x:Static common:SizeUnit.GB}}"
                                       Command="{Binding SetSizeUnitCommand}"
                                       CommandParameter="{x:Static common:SizeUnit.GB}"/>
                    <RibbonRadioButton SmallImageSource="image/mb.png"
                                       IsChecked="{Binding SizeUnit, Converter={StaticResource SizeUnitConverter},
                                        ConverterParameter={x:Static common:SizeUnit.MB}}"
                                       Command="{Binding SetSizeUnitCommand}"
                                       CommandParameter="{x:Static common:SizeUnit.MB}"/>
                    <RibbonRadioButton SmallImageSource="image/kb.png"
                                       IsChecked="{Binding SizeUnit, Converter={StaticResource SizeUnitConverter},
                                        ConverterParameter={x:Static common:SizeUnit.KB}}"
                                       Command="{Binding SetSizeUnitCommand}"
                                       CommandParameter="{x:Static common:SizeUnit.KB}"/>
                </RibbonGroup>
                <RibbonGroup Header="Expand">
                    <RibbonMenuButton Label="Expand" LargeImageSource="image/expand.png">
                        <RibbonMenuItem Header="To Level 1" Tag="{x:Static common:LevelExpension.Level1}" Click="ExpandItems_Click"/>
                        <RibbonMenuItem Header="To Level 2" Tag="{x:Static common:LevelExpension.Level2}" Click="ExpandItems_Click"/>
                        <RibbonMenuItem Header="To Level 3" Tag="{x:Static common:LevelExpension.Level3}" Click="ExpandItems_Click"/>
                        <RibbonMenuItem Header="To Level 4" Tag="{x:Static common:LevelExpension.Level4}" Click="ExpandItems_Click"/>
                        <RibbonMenuItem Header="To Level 5" Tag="{x:Static common:LevelExpension.Level5}" Click="ExpandItems_Click"/>
                        <RibbonMenuItem Header="To Level 6" Tag="{x:Static common:LevelExpension.Level6}" Click="ExpandItems_Click"/>
                        <RibbonSeparator />
                        <RibbonMenuItem Header="Full Expand" ImageSource="image/expand.png" 
                                        Tag="{x:Static common:LevelExpension.FullExpansion}" Click="ExpandItems_Click"/>
                    </RibbonMenuButton>
                </RibbonGroup>
                <RibbonGroup Header="Collapse">
                    <RibbonButton Label="Collapse" LargeImageSource="image/collapse.png" Click="CollapseAllNode_Click"/>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <Grid Grid.Row="1" x:Name="TreeGrid">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsScanning}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </Grid.Style>

            <tree:TreeList x:Name="_tree" GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler" >
            <tree:TreeList.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </tree:TreeList.ItemContainerStyle>
            <tree:TreeList.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn Width="300">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Name" Tag="{x:Static common:ColumnSort.Name}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <tree:RowExpander/>
                                        <Image Source="{Binding Type, Converter={StaticResource ImageConverter}}"  Margin="0, 0, 5, 0" Width="20" Height="20"/>
                                        <TextBlock TextAlignment="Right" Width="{Binding DataContext.WidthPrefix, RelativeSource={RelativeSource AncestorType=Window}}">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource PrefixOfNameConverter}">
                                                    <Binding Path="."/>
                                                    <Binding Path="DataContext.ModeDisplay" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                    <Binding Path="DataContext.SizeUnit" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock Text="{Binding Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="100">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Size" Tag="{x:Static common:ColumnSort.Size}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock HorizontalAlignment="Right">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource SizeConverter}" >
                                                <Binding Path="DataContext.SizeUnit" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                <Binding Path="Size"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="100">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Allocated" Tag="{x:Static common:ColumnSort.Allocated}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock HorizontalAlignment="Right">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource SizeConverter}" >
                                                <Binding Path="DataContext.SizeUnit" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                <Binding Path="Allocated"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="75">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Folders" Tag="{x:Static common:ColumnSort.CountFolders}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CountFolders}" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="60">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Files" Tag="{x:Static common:ColumnSort.CountFiles}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CountFiles}" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="150">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="% of Parent" Tag="{x:Static common:ColumnSort.PercentOfParent}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ProgressBar Name="pbPercentOfParent"  Height="15"
                                                     Minimum="0" Maximum="100" Value="{Binding PercentOfParent, Mode=OneWay}" />
                                        <TextBlock Text="{Binding ElementName=pbPercentOfParent, Path=Value, StringFormat={}{0:f2} %}" 
                                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="110">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Last Modified" Tag="{x:Static common:ColumnSort.LastModified}"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LastModified, StringFormat=dd.MM.yyyy}" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </tree:TreeList.View>
            </tree:TreeList>
            <TextBlock Padding="10,30" Visibility="{Binding ElementName=_tree, Path=HasItems, Converter={StaticResource VisibilityInitialTextConverter}}">        
            To analyze your disk space usage, choose a drive or path from the "ScanNode" menu.
            </TextBlock>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsScanning}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <fa:ImageAwesome Grid.Row="0" Icon="Spinner" Spin="{Binding IsScanning}" SpinDuration="4" Height="100" Foreground="LightSteelBlue"/>
            
        </Grid>
    </Grid>   
</RibbonWindow>