<Window x:Class="WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WPF.ViewModel"
        xmlns:m="clr-namespace:WPF.Models"
        xmlns:cmd="clr-namespace:WPF.Infrastructure.Command"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:local="clr-namespace:WPF"
        mc:Ignorable="d"
        Title="TreeSize Application" Height="450" Width="800">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <StackPanel>
        <Ribbon DockPanel.Dock="Top" x:Name="rbMenu">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>



                    <RibbonApplicationMenuItem>
                        <RibbonApplicationMenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Solid_SignOutAlt" Height="20" Margin="0,0,10,0"/>
                                <TextBlock Text="Close"/>
                            </StackPanel>
                        </RibbonApplicationMenuItem.Header>
                        <RibbonApplicationMenuItem.Command>
                            <cmd:CloseApplicationCommand/>
                        </RibbonApplicationMenuItem.Command>


                    </RibbonApplicationMenuItem>

                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Name="Tab1" Header="Main">
                <RibbonGroup Name="Group1" Header="Folder" MinWidth="10">
                    <RibbonApplicationMenuItem Name="SelectFolder" ImageSource="image/open.png" Width="50"/>
                    <RibbonMenuButton DataContext="{Binding .}" Label="drive" Width="50" ItemsSource="{Binding Drives}">
                        <RibbonMenuButton.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command" Value="{Binding DataContext.ScanningFolderCommand,
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RibbonMenuButton}}}"/>
                                <!--<Setter Property="CommandParameter" Value="{Binding}" />-->
                                <Setter Property="CommandParameter" Value="C:\Users\ilya\Desktop\Корень" />
                            </Style>
                        </RibbonMenuButton.ItemContainerStyle>
                    </RibbonMenuButton>
                </RibbonGroup>

            </RibbonTab>


        </Ribbon>

        
        
        
        <StackPanel VerticalAlignment="Bottom" Orientation="Horizontal">
            <Button Command="{Binding ScanningFolderCommand}" CommandParameter="C:\Users\ilya\Desktop\Корень" Content="Start" Width="50" Height="30"/>
            <TextBlock Text="{Binding Items.Count}" Width="276" Height="33" VerticalAlignment="Top" Background="Gray"/>
            <TextBox Name="path" Width="274" Height="36" Text="C:/Users/ilya/Desktop" />
        </StackPanel>


        <DataGrid
            Grid.Row="1"
            ItemsSource="{Binding Items}" 
            AutoGenerateColumns="False" 
            IsReadOnly="True"
            CanUserAddRows="False"
            GridLinesVisibility="None">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Width="300" CanUserSort="False">

                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">

                                        <Border 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                                            <StackPanel Orientation="Horizontal">

                                                <ToggleButton
                                                    x:Name="ExpandButton"
                                                    Margin="{Binding Level}"                                                    
                                                    IsChecked="{Binding Path=IsExpanded, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                    ClickMode="Press">

                                                    <ToggleButton.Template>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">

                                                            <Border Width="24" Height="24" HorizontalAlignment="Left" VerticalAlignment="Center" Background="Gray">
                                                                <!--<Image Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                       Source="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Converter={StaticResource BoolToExpandCollapseIconConverter}}" />-->
                                                                <Image Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                       Source="image/info.png" />
                                                            </Border>

                                                        </ControlTemplate>
                                                    </ToggleButton.Template>

                                                </ToggleButton>

                                               
                                                <TextBlock Margin="5 0 0 0" VerticalAlignment="Center" Text="{Binding Name}" />

                                                <ContentPresenter
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                    Margin="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                                            </StackPanel>

                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding CanExpand}" Value="False">
                                                <Setter TargetName="ExpandButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.CellStyle>

                </DataGridTextColumn>

                <DataGridTextColumn Header="Size" Binding="{Binding Path=Size}" Width="*" CanUserSort="False" />               
              
            </DataGrid.Columns>

        </DataGrid>













    </StackPanel>
   

</Window>
